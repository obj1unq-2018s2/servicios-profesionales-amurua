import profesionales.*
import universidades.*

describe "profesionales"{

	// TODO Se lee mejor así (y detecta un error que estaba oculto!)				
	var sanMartin = new Universidad(
		provincia = "Buenos Aires",
		honorariosPorHoraRecomendados = 3500
	)
	
	var rosario
	var corrientes
	var hurlingham
	
	var juana
	var melina
	var rocio
	var luciana

	fixture {
		rosario = new Universidad()
		corrientes = new Universidad()
		hurlingham = new Universidad()
		
		
		rosario.provincia("Santa Fe")
		rosario.honorariosPorHoraRecomendados(2800)
		
		corrientes.provincia("Corrientes")
		corrientes.honorariosPorHoraRecomendados(4200)
		
		hurlingham.provincia("Buenos Aires")
		hurlingham.honorariosPorHoraRecomendados(8800)
		
		juana = new ProfesionalVinculado()
		melina = new ProfesionalAsociado()
		rocio = new ProfesionalLibre()
		luciana = new ProfesionalLibre()
		
		juana.universidad(rosario)
		melina.universidad(corrientes)
		rocio.universidad(hurlingham)
		rocio.honorariosPorHora(5000)
		rocio.provinciasDondePuedeTrabajar(["Santa Fe","Cordoba","Buenos Aires"])
		luciana.universidad(rosario)
		luciana.honorariosPorHora(3200)
		luciana.provinciasDondePuedeTrabajar(["Santa Fe","Entre Ríos"])
	}
	
	test "test juana" {	
		assert.equals(rosario, juana.universidad())
	}
	
	test "test melina" {	
		assert.equals(corrientes, melina.universidad())
	}
	
	test "test rocio" {	
		assert.equals(hurlingham,rocio.universidad())
		assert.equals(5000,rocio.honorariosPorHora())
		assert.equals(["Santa Fe","Cordoba","Buenos Aires"],rocio.provinciasDondePuedeTrabajar())
	}
	
	test "test luciana" {	
		assert.equals(rosario,luciana.universidad())
		assert.equals(3200,luciana.honorariosPorHora())
		assert.equals(["Santa Fe","Entre Ríos"],luciana.provinciasDondePuedeTrabajar())
	}
	
	
}